# mode value for each site and month
# function for mode
mode <- function(x){
t <- table(x)
return(as.numeric(names(t)[which.max(t)]))
}
# mode value for DL at each site and month
rna_mode_val <- dat %>%
filter(!is.na(rna_l)) %>%  # only need DL information
group_by(site, rna_d) %>%
dplyr::summarise(dl = mode(rna_l)) %>%
ungroup %>%
mutate(site = as.factor(site))
# time range for each site
site_date <- dat %>%
group_by(site) %>%
dplyr::summarise(min_month = min(rna_d),
max_month =max(rna_d))
# DL value for each site and month
rna_dl_val <- lapply(unique(rna_mode_val$site), function(x){
temp <- site_date %>% filter(site == x)
return(data.frame(site = x,
time = seq(as_date(temp$min_month), as_date(temp$max_month), by = '1 month') %>%
as.yearmon))
}) %>% list.rbind %>%
left_join(rna_mode_val, c("site" = "site", "time" = "rna_d"))
# fill the first 2 rows
rna_dl_val$dl[1:2] <- 50
rna_dl_val <- rna_dl_val %>%
mutate(dl = na.locf(dl))
# DL value for plot (only show change points)
rna_dl_plot <- rna_dl_val %>%
mutate(dl_lag = lag(dl)) %>%
filter(is.na(dl_lag) | dl != dl_lag) %>%
dplyr::select(-dl_lag)
# yearly mode
# mode value for DL at each site and month
rna_mode_val2 <- dat %>%
filter(!is.na(rna_l)) %>%  # only need DL information
mutate(rna_year = year(rna_d)) %>%
group_by(site, rna_year) %>%
dplyr::summarise(dl = mode(rna_l)) %>%
ungroup %>%
mutate(site = as.factor(site))
# time range for each site
site_date2 <- dat %>%
group_by(site) %>%
dplyr::summarise(min_year = year(min(rna_d)),
max_year = year(max(rna_d)))
# DL value for each site and month
rna_dl_val2 <- lapply(unique(rna_mode_val2$site), function(x){
temp <- site_date2 %>% filter(site == x)
return(data.frame(site = x,
time = temp$min_year:temp$max_year))
}) %>% list.rbind %>%
left_join(rna_mode_val2, c("site" = "site", "time" = "rna_year"))
# fill the first 2 rows
# rna_dl_val2$dl[1:2] <- 50
# rna_dl_val <- rna_dl_val %>%
#   mutate(dl = na.locf(dl))
# DL value for plot (only show change points)
rna_dl_plot2 <- rna_dl_val2 %>%
mutate(dl_lag = lag(dl)) %>%
filter(is.na(dl_lag) | dl != dl_lag) %>%
dplyr::select(-dl_lag)
# for the site with min dl_val, dl = 1
min_dl <- 20
# impute DL values for outcome
colnames(rna_dl_val)[3] <- 'dl_val'
dat_obs <- dat %>%
mutate(site = as.factor(site)) %>%
left_join(rna_dl_val, c("site" = "site", "rna_d" = "time"))
# impute DL values for baseline
colnames(rna_dl_val)[3] <- 'dl_val_baseline'
dat_obs <- dat_obs %>%
mutate(site = as.factor(site)) %>%
left_join(rna_dl_val, c("site" = "site", "rna_d" = "time")) %>%
mutate(rna_baseline_l = ifelse(is.na(rna_baseline_l), dl_val_baseline, rna_baseline_l),
rna_l = ifelse(is.na(rna_l), dl_val, rna_l)) %>%
filter(rna_baseline >= rna_baseline_l) %>%  # exclude baseline rna < dl
mutate(rna_outcome = ifelse(rna_outcome <= dl_val, dl_val, rna_outcome),
dl = ifelse(rna_outcome <= dl_val & dl_val != min_dl, 0, 1))
# all DL values
site_dl <- dat_obs$dl_val %>% unique %>% sort
# data recoding based on observed values
dat_recode <- dat_obs %>%
arrange(dl_val)
dat_recode$rna_outcome <- unlist(sapply(1:length(site_dl), function(i) {
if(i == 1){
temp <- dat_recode %>% filter(dl_val == site_dl[i])
temp$rna_outcome <- ifelse(temp$dl == 0,
min_dl,
temp$rna_outcome)
return(temp$rna_outcome)
}else{
temp <- dat_recode %>% filter(dl_val == site_dl[i])
temp$rna_outcome <- ifelse(temp$dl == 0,
max(dat_recode$rna_outcome[dat_recode$rna_outcome < site_dl[i]]),
temp$rna_outcome)
return(temp$rna_outcome)
}
}))
dat_recode <- dat_recode %>%
mutate(cd4_baseline_sqrt = sqrt(cd4_baseline),
rna_baseline_log = log(rna_baseline, 10))
# appropriate baseline for factor
dat_recode$male <- as.factor(dat_recode$male)
dat_recode$male <- relevel(dat_recode$male, ref = '1')
dat_recode$site <- relevel(dat_recode$site, ref = 'peru')
dat_recode$center <- as.factor(dat_recode$center)
dat_recode$center <- relevel(dat_recode$center, ref = 'pe-imtavh')
dat_recode$route <- as.factor(dat_recode$route)
dat_recode$route <- relevel(dat_recode$route, ref = 'homo/bisexual')
dat_recode$regimen <- as.factor(dat_recode$regimen)
dat_recode$regimen <- relevel(dat_recode$regimen, ref = 'NNRTI-based')
age_knots <- rcspline.eval(dat_recode$age, nk=4, knots.only=TRUE)
age_splines <- rcspline.eval(dat_recode$age, inclx=TRUE, knots=age_knots)
colnames(age_splines) <- paste0('age', c('','1','2'))
head(age_splines)
head(dat_recode$age)
age_knots <- rcspline.eval(dat_recode$age, nk=4, knots.only=TRUE)
age_splines <- rcspline.eval(dat_recode$age, inclx=TRUE, knots=age_knots)
colnames(age_splines) <- paste0('age', c('','1','2'))
# cd4_baseline_sqrt
cd4_knots <- rcspline.eval(dat_recode$cd4_baseline_sqrt, nk=4, knots.only=TRUE)
cd4_splines <- rcspline.eval(dat_recode$cd4_baseline_sqrt, inclx=TRUE, knots=cd4_knots)
colnames(cd4_splines) <- paste0('cd4', c('','1','2'))
# rna_baseline_log
rna_knots <- rcspline.eval(dat_recode$rna_baseline_log, nk=4, knots.only=TRUE)
rna_splines <- rcspline.eval(dat_recode$rna_baseline_log, inclx=TRUE, knots=rna_knots)
colnames(rna_splines) <- paste0('rna', c('','1', '2'))
# rna_time
time_knots <- rcspline.eval(dat_recode$rna_time, nk=4, knots.only=TRUE)
time_splines <- rcspline.eval(dat_recode$rna_time, inclx=TRUE, knots=time_knots)
colnames(time_splines) <- paste0('time', c('','1','2'))
head(age_splines[,-1])
# age
age_knots <- rcspline.eval(dat_recode$age, nk=4, knots.only=TRUE)
age_splines <- rcspline.eval(dat_recode$age, inclx=TRUE, knots=age_knots)
colnames(age_splines) <- paste0('age', c('','1','2'))
# cd4_baseline_sqrt
cd4_knots <- rcspline.eval(dat_recode$cd4_baseline_sqrt, nk=4, knots.only=TRUE)
cd4_splines <- rcspline.eval(dat_recode$cd4_baseline_sqrt, inclx=TRUE, knots=cd4_knots)
colnames(cd4_splines) <- paste0('cd4_baseline_sqrt', c('','1','2'))
# rna_baseline_log
rna_knots <- rcspline.eval(dat_recode$rna_baseline_log, nk=4, knots.only=TRUE)
rna_splines <- rcspline.eval(dat_recode$rna_baseline_log, inclx=TRUE, knots=rna_knots)
colnames(rna_splines) <- paste0('rna_baseline_log', c('','1', '2'))
# rna_time
time_knots <- rcspline.eval(dat_recode$rna_time, nk=4, knots.only=TRUE)
time_splines <- rcspline.eval(dat_recode$rna_time, inclx=TRUE, knots=time_knots)
colnames(time_splines) <- paste0('rna_time', c('','1','2'))
# data with splines
dat_rcs <- dat_recode
dat_rcs <- cbind(dat_rcs, age_splines[,-1], cd4_splines[-1], rna_splines[,-1], time_splines[,-1])
head(dat_rcs)
head(age_splines[,-1])
age_splines[,-1] %>% dim
dat_rcs %>% dim
# data with splines
dat_rcs <- dat_recode
# age
age_knots <- rcspline.eval(dat_recode$age, nk=4, knots.only=TRUE)
age_splines <- rcspline.eval(dat_recode$age, inclx=TRUE, knots=age_knots)
colnames(age_splines) <- paste0('age', c('','1','2'))
dat_rcs <- cbind(dat_rcs, age_splines[,-1])
# cd4_baseline_sqrt
cd4_knots <- rcspline.eval(dat_recode$cd4_baseline_sqrt, nk=4, knots.only=TRUE)
cd4_splines <- rcspline.eval(dat_recode$cd4_baseline_sqrt, inclx=TRUE, knots=cd4_knots)
colnames(cd4_splines) <- paste0('cd4_baseline_sqrt', c('','1','2'))
dat_rcs <- cbind(dat_rcs, cd4_splines[,-1])
# rna_baseline_log
rna_knots <- rcspline.eval(dat_recode$rna_baseline_log, nk=4, knots.only=TRUE)
rna_splines <- rcspline.eval(dat_recode$rna_baseline_log, inclx=TRUE, knots=rna_knots)
colnames(rna_splines) <- paste0('rna_baseline_log', c('','1', '2'))
dat_rcs <- cbind(dat_rcs, rna_splines[,-1])
# rna_time
time_knots <- rcspline.eval(dat_recode$rna_time, nk=4, knots.only=TRUE)
time_splines <- rcspline.eval(dat_recode$rna_time, inclx=TRUE, knots=time_knots)
colnames(time_splines) <- paste0('rna_time', c('','1','2'))
dat_rcs <- cbind(dat_rcs, time_splines[,-1])
head(dat_rcs)
mod_rcs <- multipleDL(rna_outcome ~ age + age1 + age2 + male + site + route + prior_aids +
cd4_baseline_sqrt + cd4_baseline_sqrt1 + cd4_baseline_sqrt2 +
rna_baseline_log + rna_baseline_log1 + rna_baseline_log2 +
regimen + rna_time + rna_time1 + rna_time2 + year,
data = dat_obs,
delta_lower = dat_obs$dl,
link = 'logit')
mod_rcs <- multipleDL(rna_outcome ~ age + age1 + age2 + male + site + route + prior_aids +
cd4_baseline_sqrt + cd4_baseline_sqrt1 + cd4_baseline_sqrt2 +
rna_baseline_log + rna_baseline_log1 + rna_baseline_log2 +
regimen + rna_time + rna_time1 + rna_time2 + year,
data = dat_rcs,
delta_lower = dat_rcs$dl,
link = 'logit')
library(multipleDl)
library(multipleDL)
mod_rcs <- multipleDL(rna_outcome ~ age + age1 + age2 + male + site + route + prior_aids +
cd4_baseline_sqrt + cd4_baseline_sqrt1 + cd4_baseline_sqrt2 +
rna_baseline_log + rna_baseline_log1 + rna_baseline_log2 +
regimen + rna_time + rna_time1 + rna_time2 + year,
data = dat_rcs,
delta_lower = dat_rcs$dl,
link = 'logit')
head(dat_rcs)
knitr::opts_chunk$set(echo = TRUE, error= F, warning = F, message = F, comment = NA)
library(plyr)
library(lubridate)
library(kableExtra)
library(flextable)
library(ggplot2)
library(rms)
library(zoo)
library(tidyverse)
library(rlist)
library(scales)
library(lmtest)
# load data
art_ori <- read.csv("art.csv", stringsAsFactors = F)
basic_ori <- read.csv("basic.csv", stringsAsFactors = F)
ce_ori <- read.csv("ce.csv", stringsAsFactors = F)
follow_ori <- read.csv("follow.csv", stringsAsFactors = F)
cd4_ori <- read.csv("lab_cd4.csv", stringsAsFactors = F)
rna_ori <- read.csv("lab_rna.csv", stringsAsFactors = F)
visit_ori <- read.csv("visit.csv", stringsAsFactors = F)
# patient id (patient)
# baseline date (baseline_d)
baseline <- basic_ori %>%
dplyr::select(patient, baseline_d) %>%
mutate(baseline_d = lubridate::as_date(baseline_d))
# prior AIDS event
## `basic` talbe: if any of `aids_first_y`, `aids_art_y`, `aids_enrol_y` is 1 then T, else F
prior_aids_basic <- basic_ori %>%
mutate(aids_basic = aids_first_y | aids_art_y | aids_enrol_y) %>%
dplyr::select(patient, aids_basic)
## `visit` table: if `cdcstage` == C or `whostage` == 4 then T, else F [[??? what about c1 c2 in `cdcstage`]]
prior_aids_visit <- visit_ori %>%
left_join(baseline, "patient") %>%
filter(lubridate::as_date(visit_d) <= baseline_d) %>% # only consider visit before baseline
mutate(aids_visit = cdcstage == 'C' | whostage == 4) %>%
dplyr::select(patient, visit_d, aids_visit) %>%
group_by(patient) %>% # group by patient
arrange(desc(visit_d)) %>% # order by visit_d desc (most recent comes first)
filter(row_number() == 1) %>% # only select the most recent record
dplyr::select(patient, aids_visit)
## `ce` table: if ``ce_id` starts with `ade` then T, else F
prior_aids_ce <- ce_ori %>%
left_join(baseline, "patient") %>%
filter(lubridate::as_date(ce_d) <= baseline_d) %>% # only consider dates before baseline
mutate(aids_ce = startsWith(ce_id, 'ade')) %>%
dplyr::select(patient, ce_d, aids_ce) %>%
group_by(patient) %>% # group by patient
arrange(desc(ce_d)) %>% # order by ce_d desc (most recent comes first)
filter(row_number() == 1) %>% # only select the most recent record
dplyr::select(patient, aids_ce)
## combine the three together
prior_aids <- baseline %>%
left_join(prior_aids_basic, "patient") %>%
left_join(prior_aids_visit, "patient") %>%
left_join(prior_aids_ce, "patient") %>%
mutate(aids_basic = replace_na(aids_basic, FALSE), # replace NA
aids_visit = replace_na(aids_visit, FALSE), # replace NA
aids_ce = replace_na(aids_ce, FALSE), # replace NA
prior_aids = (aids_basic | aids_visit | aids_ce)) %>%
dplyr::select(patient, prior_aids)
# age (only include >= 18 years old)
# sex
# study site
# probable route of transmission
basic <- basic_ori %>%
mutate(age = floor(lubridate::interval(lubridate::as_date(birth_d), lubridate::as_date(baseline_d)) / lubridate::years(1))) %>%
mutate(route = ifelse(mode == "Heterosexual contact", "heterosexual",
ifelse(mode == "Homosexual contact" | mode == 'Bisexual', "homo/bisexual",
"other/unknown"))) %>%
filter(age >= 18) %>%  # only include adults
filter(recart_y == 0) %>%  # only include recart_y == 0
dplyr::select(patient, patient_id, age, male, site, route, baseline_d)
# baseline cd4
cd4 <- cd4_ori %>%
inner_join(baseline, "patient") %>%
mutate(time_diff = lubridate::as_date(cd4_d) - lubridate::as_date(baseline_d)) %>%
filter(time_diff >= -180 & time_diff <= 30) %>% # cd4 measured within 6 months before and 30 days after baseline
group_by(patient) %>%
filter(which.min(abs(time_diff)) == row_number()) %>%  # select the one closest to baseline
dplyr::select(patient, cd4_baseline = cd4_v)
# baseline viral load
rna_baseline <- rna_ori %>%
inner_join(baseline, "patient") %>%
mutate(time_diff = lubridate::as_date(rna_d) - lubridate::as_date(baseline_d)) %>%
filter(time_diff >= - 180 & time_diff <= 7) %>%  # rna measured wtihin 6 months before and 7 days before baseline
group_by(patient) %>%
filter(which.min(abs(time_diff)) == row_number()) %>%   # select the one closest to baseline
dplyr::select(patient, rna_baseline = rna_v, rna_baseline_d = rna_d, rna_baseline_l = rna_l)
# ART regimen
## patient whose first record is HAART
haart <- art_ori %>%
group_by(patient) %>%
arrange(art_sd) %>%
filter(row_number() == 1) %>%
filter(art_class == 'HAART') %>%
pull(patient)
## regimen
regimen <- art_ori %>%
mutate(regimen = ifelse(ii1>0 | ii2>0, "INSTI-based",
ifelse(nnrti>0 & pi==0, "NNRTI-based",
ifelse(pi>0 & nnrti==0, "PI-based", "Other")))) %>%
filter(patient %in% haart) %>%
group_by(patient) %>%
arrange(art_sd) %>%
filter(row_number() == 1) %>%
dplyr::select(patient, regimen)
# outcome: viral load at 6 months/180 days
rna_outcome <- rna_ori %>%
inner_join(baseline, "patient") %>%
mutate(time_diff = lubridate::as_date(rna_d) - (lubridate::as_date(baseline_d) + lubridate::days(180)))%>%
filter(time_diff >= - 90 & time_diff <= 90) %>%  # rna measured within 6 months (+/- 3 months)
group_by(patient) %>%
filter(which.min(abs(time_diff)) == row_number()) %>%   # select the one closest to baseline
dplyr::select(patient, rna_outcome = rna_v, rna_l, center, rna_d)
# combine
data <- basic %>%
inner_join(rna_outcome, "patient") %>%
inner_join(cd4, "patient") %>%
inner_join(rna_baseline, "patient") %>%
left_join(prior_aids, "patient") %>%
inner_join(regimen %>% dplyr::select(patient, regimen), "patient") %>%
mutate(rna_time = as.numeric(lubridate::as_date(rna_d) - lubridate::as_date(rna_baseline_d)))
dat <- data %>%
filter(lubridate::year(baseline_d) >= 2000 & lubridate::year(rna_d) >= 2000
& lubridate::year(baseline_d) <= 2018 & lubridate::year(rna_d) <= 2018) %>%
filter(center %in% c('ar-ss', 'br-ipec', 'cl-fa', 'mx-incmnsz', 'pe-imtavh')) %>%
filter(!is.na(cd4_baseline)) %>%
filter(male != 9) %>%
mutate(baseline_d = zoo::as.yearmon(baseline_d), # convert date format (year-month)
rna_d = zoo::as.yearmon(rna_d),
rna_baseline_d = zoo::as.yearmon(rna_baseline_d)) %>%
mutate(dl = 1) %>% # change later
mutate(cd4_baseline = as.numeric(cd4_baseline),
rna_baseline = as.numeric(rna_baseline),
rna_outcome = as.numeric(rna_outcome))
# mode value for each site and month
# function for mode
mode <- function(x){
t <- table(x)
return(as.numeric(names(t)[which.max(t)]))
}
# mode value for DL at each site and month
rna_mode_val <- dat %>%
filter(!is.na(rna_l)) %>%  # only need DL information
group_by(site, rna_d) %>%
dplyr::summarise(dl = mode(rna_l)) %>%
ungroup %>%
mutate(site = as.factor(site))
# time range for each site
site_date <- dat %>%
group_by(site) %>%
dplyr::summarise(min_month = min(rna_d),
max_month =max(rna_d))
# DL value for each site and month
rna_dl_val <- lapply(unique(rna_mode_val$site), function(x){
temp <- site_date %>% filter(site == x)
return(data.frame(site = x,
time = zoo::as.yearmon(seq(lubridate::as_date(temp$min_month),
lubridate::as_date(temp$max_month), by = '1 month'))))
}) %>% list.rbind %>%
left_join(rna_mode_val, c("site" = "site", "time" = "rna_d"))
# fill the first 2 rows
rna_dl_val$dl[1:2] <- 50
rna_dl_val <- rna_dl_val %>%
mutate(dl = na.locf(dl))
# DL value for plot (only show change points)
rna_dl_plot <- rna_dl_val %>%
mutate(dl_lag = lag(dl)) %>%
filter(is.na(dl_lag) | dl != dl_lag) %>%
dplyr::select(-dl_lag)
# yearly mode
# mode value for DL at each site and month
rna_mode_val2 <- dat %>%
filter(!is.na(rna_l)) %>%  # only need DL information
mutate(rna_year = lubridate::year(rna_d)) %>%
group_by(site, rna_year) %>%
dplyr::summarise(dl = mode(rna_l)) %>%
ungroup %>%
mutate(site = as.factor(site))
# time range for each site
site_date2 <- dat %>%
group_by(site) %>%
dplyr::summarise(min_year = lubridate::year(min(rna_d)),
max_year = lubridate::year(max(rna_d)))
# DL value for each site and month
rna_dl_val2 <- lapply(unique(rna_mode_val2$site), function(x){
temp <- site_date2 %>% filter(site == x)
return(data.frame(site = x,
time = temp$min_year:temp$max_year))
}) %>% list.rbind %>%
left_join(rna_mode_val2, c("site" = "site", "time" = "rna_year"))
# fill the first 2 rows
# rna_dl_val2$dl[1:2] <- 50
# rna_dl_val <- rna_dl_val %>%
#   mutate(dl = na.locf(dl))
# DL value for plot (only show change points)
rna_dl_plot2 <- rna_dl_val2 %>%
mutate(dl_lag = lag(dl)) %>%
filter(is.na(dl_lag) | dl != dl_lag) %>%
dplyr::select(-dl_lag)
# for the site with min dl_val, dl = 1
min_dl <- 20
# impute DL values for outcome
colnames(rna_dl_val)[3] <- 'dl_val'
dat_obs <- dat %>%
mutate(site = as.factor(site)) %>%
left_join(rna_dl_val, c("site" = "site", "rna_d" = "time"))
# impute DL values for baseline
colnames(rna_dl_val)[3] <- 'dl_val_baseline'
dat_obs <- dat_obs %>%
mutate(site = as.factor(site)) %>%
left_join(rna_dl_val, c("site" = "site", "rna_d" = "time")) %>%
mutate(rna_baseline_l = ifelse(is.na(rna_baseline_l), dl_val_baseline, rna_baseline_l),
rna_l = ifelse(is.na(rna_l), dl_val, rna_l)) %>%
filter(rna_baseline >= rna_baseline_l) %>%  # exclude baseline rna < dl
mutate(rna_outcome = ifelse(rna_outcome <= dl_val, dl_val, rna_outcome),
dl = ifelse(rna_outcome <= dl_val & dl_val != min_dl, 0, 1))
# all DL values
site_dl <- dat_obs$dl_val %>% unique %>% sort
# data recoding based on observed values
dat_recode <- dat_obs %>%
arrange(dl_val)
dat_recode$rna_outcome <- unlist(sapply(1:length(site_dl), function(i) {
if(i == 1){
temp <- dat_recode %>% filter(dl_val == site_dl[i])
temp$rna_outcome <- ifelse(temp$dl == 0,
min_dl,
temp$rna_outcome)
return(temp$rna_outcome)
}else{
temp <- dat_recode %>% filter(dl_val == site_dl[i])
temp$rna_outcome <- ifelse(temp$dl == 0,
max(dat_recode$rna_outcome[dat_recode$rna_outcome < site_dl[i]]),
temp$rna_outcome)
return(temp$rna_outcome)
}
}))
dat_recode <- dat_recode %>%
mutate(cd4_baseline_sqrt = sqrt(cd4_baseline),
rna_baseline_log = log(rna_baseline, 10))
# get calendar yaer
dat_recode <- dat_recode %>%
mutate(year = year(rna_d))
# appropriate baseline for factor
dat_recode$male <- as.factor(dat_recode$male)
dat_recode$male <- relevel(dat_recode$male, ref = '1')
dat_recode$site <- relevel(dat_recode$site, ref = 'peru')
dat_recode$center <- as.factor(dat_recode$center)
dat_recode$center <- relevel(dat_recode$center, ref = 'pe-imtavh')
dat_recode$route <- as.factor(dat_recode$route)
dat_recode$route <- relevel(dat_recode$route, ref = 'homo/bisexual')
dat_recode$regimen <- as.factor(dat_recode$regimen)
dat_recode$regimen <- relevel(dat_recode$regimen, ref = 'NNRTI-based')
# data with splines
dat_rcs <- dat_recode
# age
age_knots <- rcspline.eval(dat_recode$age, nk=4, knots.only=TRUE)
age_splines <- rcspline.eval(dat_recode$age, inclx=TRUE, knots=age_knots)
colnames(age_splines) <- paste0('age', c('','1','2'))
dat_rcs <- cbind(dat_rcs, age_splines[,-1])
# cd4_baseline_sqrt
cd4_knots <- rcspline.eval(dat_recode$cd4_baseline_sqrt, nk=4, knots.only=TRUE)
cd4_splines <- rcspline.eval(dat_recode$cd4_baseline_sqrt, inclx=TRUE, knots=cd4_knots)
colnames(cd4_splines) <- paste0('cd4_baseline_sqrt', c('','1','2'))
dat_rcs <- cbind(dat_rcs, cd4_splines[,-1])
# rna_baseline_log
rna_knots <- rcspline.eval(dat_recode$rna_baseline_log, nk=4, knots.only=TRUE)
rna_splines <- rcspline.eval(dat_recode$rna_baseline_log, inclx=TRUE, knots=rna_knots)
colnames(rna_splines) <- paste0('rna_baseline_log', c('','1', '2'))
dat_rcs <- cbind(dat_rcs, rna_splines[,-1])
# rna_time
time_knots <- rcspline.eval(dat_recode$rna_time, nk=4, knots.only=TRUE)
time_splines <- rcspline.eval(dat_recode$rna_time, inclx=TRUE, knots=time_knots)
colnames(time_splines) <- paste0('rna_time', c('','1','2'))
dat_rcs <- cbind(dat_rcs, time_splines[,-1])
mod_rcs <- multipleDL(rna_outcome ~ age + age1 + age2 + male + site + route + prior_aids +
cd4_baseline_sqrt + cd4_baseline_sqrt1 + cd4_baseline_sqrt2 +
rna_baseline_log + rna_baseline_log1 + rna_baseline_log2 +
regimen + rna_time + rna_time1 + rna_time2 + year,
data = dat_rcs,
delta_lower = dat_rcs$dl,
link = 'logit')
beta <- mod_rcs$coef[(length(mod_rcs$coef)-15):length(mod_rcs$coef)]
beta.se <- (mod_rcs$var %>% diag %>% sqrt)[(length(mod_rcs$coef)-15):length(mod_rcs$coef)]
# p-value
pval <- (1 - pnorm(abs(beta / beta.se))) * 2
tab <- data.frame(coef=beta, se = beta.se, waldz = beta / beta.se, pval)
tab %>%
kable(digits=3) %>%
kable_styling(full_width = F)
beta <- mod_rcs$coef[(length(mod_rcs$coef)-mod_rcs$p):length(mod_rcs$coef)]
beta.se <- (mod_rcs$var %>% diag %>% sqrt)[(length(mod_rcs$coef)-mod_rcs$p):length(mod_rcs$coef)]
# p-value
pval <- (1 - pnorm(abs(beta / beta.se))) * 2
tab <- data.frame(coef=beta, se = beta.se, waldz = beta / beta.se, pval)
tab %>%
kable(digits=3) %>%
kable_styling(full_width = F)
beta <- mod_rcs$coef[(length(mod_rcs$coef)-mod_rcs$p+1):length(mod_rcs$coef)]
beta.se <- (mod_rcs$var %>% diag %>% sqrt)[(length(mod_rcs$coef)-mod_rcs$p+1):length(mod_rcs$coef)]
# p-value
pval <- (1 - pnorm(abs(beta / beta.se))) * 2
tab <- data.frame(coef=beta, se = beta.se, waldz = beta / beta.se, pval)
tab %>%
kable(digits=3) %>%
kable_styling(full_width = F)
